{% assign page_styling = '' %}
{% if blog.metafields.custom.display_subheader == true %}
  {% assign page_styling = 'tw-pt-[100px] tw-pb-md md:tw-pt-[120px]' %}
{% else %}
  {% assign page_styling = 'tw-pt-[60px] tw-pb-md md:tw-pt-[80px]' %}
{% endif %}

{% render 'loading-animation', done_loading: false %}

<opacity-reveal class='tw-hidden' data-blog-content>
  {%- paginate blog.articles by 6 -%}
    <div class=' tw-min-h-dvh tw-container {{ page_styling }}'>
      {% if blog.metafields.custom.show_title == true %}
        <div class='card tw-pt-md md:tw-pt-lg' style='opacity: 0;'>
          <h2 class='tw-text-center heading'>
            {{- blog.title -}}
          </h2>

          {% if blog.metafields.custom.blog_description != blank %}
            <p class='tw-text-center p1 tw-mt-xs md:tw-mt-sm tw-text-balance'>
              {{- blog.metafields.custom.blog_description -}}
            </p>
          {% endif %}
        </div>
      {% endif %}
      <div class='tw-grid tw-grid-cols-2 lg:tw-grid-cols-3 tw-gap-sm md:tw-gap-md tw-pt-md'>
        {%- for article in blog.articles -%}
          <div class='card' style='opacity: 0;'>
            {%- render 'article-card', article: article -%}
          </div>
        {%- endfor -%}
      </div>

      {%- if paginate.pages > 1 -%}
        {%- render 'pagination', paginate: paginate -%}
      {%- endif -%}
    </div>
  {%- endpaginate -%}
</opacity-reveal>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const loadingComponent = document.querySelector('loading-component');
    const blogContent = document.querySelector('[data-blog-content]');

    const handleLoadingComplete = () => {
      if (loadingComponent) {
        loadingComponent.style.display = 'none';
      }
      if (blogContent) {
        blogContent.classList.remove('tw-hidden');
        blogContent.style.opacity = '1';
      }
    };

    // Check if images are already loaded
    if (loadingComponent && loadingComponent.getAttribute('data-images-loaded') === 'true') {
      handleLoadingComplete();
    }

    const observer = new MutationObserver((mutations) => {
      mutations.forEach((mutation) => {
        if (mutation.type === 'attributes' && mutation.attributeName === 'data-images-loaded') {
          if (loadingComponent.getAttribute('data-images-loaded') === 'true') {
            handleLoadingComplete();
          }
        }
      });
    });

    if (loadingComponent) {
      observer.observe(loadingComponent, { attributes: true });
    }

    // Fallback in case the observer doesn't trigger
    setTimeout(() => {
      if (loadingComponent && loadingComponent.getAttribute('data-images-loaded') !== 'true') {
        loadingComponent.setAttribute('data-images-loaded', 'true');
      }
    }, 6000); // 6 second timeout
  });
</script>

{% schema %}
{
  "name": "Main Blog",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "checkbox",
      "id": "subheader_enabled",
      "label": "Enable Subheader",
      "default": false,
      "info": "If enabled,the blog page will have a adjusted padding top to account for the subheader."
    }
  ]
}
{% endschema %}
